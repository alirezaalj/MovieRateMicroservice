version: '3.3'
services:

  nginx_gateway:
    hostname: nginx_gateway
    container_name: nginx_gateway
    image: nginx:1.25.3
    restart: always
    ports:
      - '80:80'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf  # Mount your custom Nginx configuration file
    networks:
      - app_network

  ##        Auth microservice  with one instance of pg db   ###
  postgres_db_auth:
    hostname: postgres_db_auth
    container_name: postgres_db_auth
    image: postgres:14.10
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=auth_dev
    networks:
      - app_network

  auth:
    hostname: movie-auth
    container_name: movie-auth
    image: movie_auth:dev
    restart: unless-stopped
    depends_on:
      postgres_db_auth:
        condition: service_healthy
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SERVER_PORT=80
      # application
      - APP_JWT-SECRET=ZmlsbVJhdGVBcHBTZWNyZXRLZXktZmlsbVJhdGVBcHBTZWNyZXRLZXktZmlsbVJhdGVBcHBTZWNyZXRLZXktZmlsbVJhdGVBcHBTZWNyZXRLZXk=
      # datasource
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres_db_auth:5432/auth_dev
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
    ports:
      - '8080:80'
    networks:
     - app_network


  ##        Movie microservice  with one instance of pg db   ###
  postgres_db_movie:
    hostname: postgres_db_movie
    container_name: postgres_db_movie
    image: postgres:14.10
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 5433:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=movie_dev
    networks:
      - app_network

  movie:
    hostname: movie
    container_name: movie
    image: movie:dev
    restart: unless-stopped
    depends_on:
      postgres_db_movie:
        condition: service_healthy
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SERVER_PORT=80
      # application
      - APP_JWT-SECRET=ZmlsbVJhdGVBcHBTZWNyZXRLZXktZmlsbVJhdGVBcHBTZWNyZXRLZXktZmlsbVJhdGVBcHBTZWNyZXRLZXktZmlsbVJhdGVBcHBTZWNyZXRLZXk=
      - app.movie.rate.host=http://movie-rate
      # datasource
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres_db_movie:5432/movie_dev
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
    ports:
      - '8081:80'
    networks:
     - app_network


  ##        MOvie Rate microservice  with one instance of pg db   ###
  postgres_db_rate:
    hostname: postgres_db_rate
    container_name: postgres_db_rate
    image: postgres:14.10
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 5434:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=movie_rate_dev
    networks:
      - app_network
  rate:
    hostname: movie-rate
    container_name: movie-rate
    image: movie_rate:dev
    restart: unless-stopped
    depends_on:
      postgres_db_rate:
        condition: service_healthy
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SERVER_PORT=80
      # application
      - APP_JWT-SECRET=ZmlsbVJhdGVBcHBTZWNyZXRLZXktZmlsbVJhdGVBcHBTZWNyZXRLZXktZmlsbVJhdGVBcHBTZWNyZXRLZXktZmlsbVJhdGVBcHBTZWNyZXRLZXk=
      # datasource
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres_db_rate:5432/movie_rate_dev
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
    ports:
      - '8082:80'
    networks:
     - app_network

volumes:
  postgres:
    driver: local

networks:
  app_network:
    driver: bridge